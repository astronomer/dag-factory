example_taskflow:
  default_args:
    owner: "custom_owner"
    start_date: 2 days
  description: "Example of TaskFlow powered DAG that includes dynamic task mapping"
  schedule_interval: "0 3 * * *"
  default_view: "graph"
  tasks:
    some_number:
      decorator: airflow.decorators.task
      python_callable: sample.some_number
    numbers_list:
      decorator: airflow.decorators.task
      python_callable_name: build_numbers_list
      python_callable_file: $CONFIG_ROOT_DIR/sample.py
    another_numbers_list:
      decorator: airflow.decorators.task
      python_callable: sample.build_numbers_list
    double_number_from_arg:
      decorator: airflow.decorators.task
      python_callable: sample.double
      number: 2
    double_number_from_task:
      decorator: airflow.decorators.task
      python_callable: sample.double
      number: +some_number  # the prefix + leads to resolving this value as the task `some_number`, previously defined
    double_number_with_dynamic_task_mapping_static:
      decorator: airflow.decorators.task
      python_callable: sample.double
      expand:
          number:
            - 1
            - 3
            - 5
    double_number_with_dynamic_task_mapping_taskflow:
      decorator: airflow.decorators.task
      python_callable: sample.double
      expand:
          number: +numbers_list  # the prefix + tells DagFactory to resolve this value as the task `numbers_list`, previously defined
    multiply_with_multiple_parameters:
      decorator: airflow.decorators.task
      python_callable: sample.multiply
      expand:
          a: +numbers_list  # the prefix + tells DagFactory to resolve this value as the task `numbers_list`, previously defined
          b: +another_numbers_list # the prefix + tells DagFactory to resolve this value as the task `another_numbers_list`, previously defined
    double_number_with_dynamic_task_and_partial:
      decorator: airflow.decorators.task
      python_callable: sample.double_with_label
      expand:
          number: +numbers_list  # the prefix + tells DagFactory to resolve this value as the task `numbers_list`, previously defined
      partial:
          label: True
